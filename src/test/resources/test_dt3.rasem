width = 1000
height = 1000

self.width = width + 20
self.height = height + 20

point_size = (width + height) / 150

points = [
[13, 691], # 000
[29, 447], # 001
[37, 387], # 002
[49, 245], # 003
[67, 29], # 004
[74, 336], # 005
[77, 677], # 006
[78, 941], # 007
[84, 875], # 008
[95, 844], # 009
[98, 232], # 010
[105, 258], # 011
[112, 62], # 012
[117, 669], # 013
[125, 653], # 014
[135, 220], # 015
[141, 710], # 016
[143, 747], # 017
[143, 888], # 018
[155, 645], # 019
[198, 691], # 020
[207, 616], # 021
[223, 380], # 022
[241, 320], # 023
[267, 773], # 024
[271, 534], # 025
[286, 641], # 026
[290, 151], # 027
[294, 859], # 028
[297, 662], # 029
[298, 21], # 030
[319, 653], # 031
[319, 877], # 032
[325, 862], # 033
[331, 297], # 034
[358, 118], # 035
[358, 478], # 036
[360, 948], # 037
[380, 834], # 038
[387, 788], # 039
[408, 517], # 040
[416, 646], # 041
[428, 753], # 042
[440, 75], # 043
[441, 6], # 044
[451, 718], # 045
[457, 551], # 046
[473, 262], # 047
[477, 481], # 048
[491, 761], # 049
[503, 882], # 050
[508, 29], # 051
[515, 53], # 052
[517, 911], # 053
[524, 947], # 054
[536, 565], # 055
[539, 791], # 056
[555, 730], # 057
[577, 778], # 058
[589, 712], # 059
[602, 862], # 060
[605, 371], # 061
[608, 737], # 062
[616, 958], # 063
[633, 790], # 064
[652, 260], # 065
[667, 67], # 066
[668, 514], # 067
[671, 223], # 068
[688, 963], # 069
[692, 223], # 070
[702, 81], # 071
[715, 275], # 072
[719, 854], # 073
[726, 580], # 074
[730, 725], # 075
[730, 865], # 076
[734, 778], # 077
[738, 72], # 078
[745, 245], # 079
[784, 563], # 080
[789, 243], # 081
[792, 450], # 082
[797, 557], # 083
[835, 541], # 084
[860, 373], # 085
[872, 315], # 086
[901, 241], # 087
[905, 152], # 088
[913, 357], # 089
[916, 723], # 090
[916, 871], # 091
[938, 635], # 092
[953, 602], # 093
[957, 222], # 094
[960, 375], # 095
[978, 901], # 096
[984, 762], # 097
[986, 4], # 098
[986, 593], # 099
]

unsafe_sites = [1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,0,1,1,1,0,1,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,]

triangles = [
[ 0, 7, 8],
[ 0, 8, 9],
[ 0, 9, 17],
[ 0, 17, 6],
[ 0, 6, 1],
[ 1, 6, 14],
[ 1, 14, 19],
[ 1, 19, 21],
[ 1, 21, 25],
[ 1, 25, 22],
[ 1, 22, 2],
[ 1, 2, 3],
[ 1, 3, 4],
[ 2, 22, 5],
[ 2, 5, 3],
[ 3, 5, 11],
[ 3, 11, 10],
[ 3, 10, 12],
[ 3, 12, 4],
[ 4, 12, 30],
[ 4, 30, 44],
[ 5, 22, 23],
[ 5, 23, 11],
[ 6, 17, 16],
[ 6, 16, 13],
[ 6, 13, 14],
[ 7, 69, 37],
[ 7, 37, 18],
[ 7, 18, 8],
[ 8, 18, 9],
[ 9, 18, 17],
[ 10, 11, 15],
[ 10, 15, 12],
[ 11, 23, 15],
[ 12, 15, 27],
[ 12, 27, 30],
[ 13, 16, 19],
[ 13, 19, 14],
[ 15, 23, 27],
[ 16, 17, 20],
[ 16, 20, 19],
[ 17, 18, 24],
[ 17, 24, 20],
[ 18, 37, 32],
[ 18, 32, 28],
[ 18, 28, 24],
[ 19, 20, 21],
[ 20, 24, 29],
[ 20, 29, 26],
[ 20, 26, 21],
[ 21, 26, 25],
[ 22, 25, 36],
[ 22, 36, 34],
[ 22, 34, 23],
[ 23, 34, 27],
[ 24, 28, 33],
[ 24, 33, 39],
[ 24, 39, 29],
[ 25, 26, 31],
[ 25, 31, 40],
[ 25, 40, 36],
[ 26, 29, 31],
[ 27, 34, 35],
[ 27, 35, 30],
[ 28, 32, 33],
[ 29, 39, 31],
[ 30, 35, 43],
[ 30, 43, 44],
[ 31, 39, 42],
[ 31, 42, 41],
[ 31, 41, 40],
[ 32, 37, 38],
[ 32, 38, 33],
[ 33, 38, 39],
[ 34, 36, 48],
[ 34, 48, 47],
[ 34, 47, 35],
[ 35, 47, 43],
[ 36, 40, 48],
[ 37, 69, 63],
[ 37, 63, 54],
[ 37, 54, 53],
[ 37, 53, 50],
[ 37, 50, 38],
[ 38, 50, 49],
[ 38, 49, 42],
[ 38, 42, 39],
[ 40, 41, 46],
[ 40, 46, 48],
[ 41, 42, 45],
[ 41, 45, 55],
[ 41, 55, 46],
[ 42, 49, 45],
[ 43, 47, 52],
[ 43, 52, 51],
[ 43, 51, 44],
[ 44, 51, 98],
[ 45, 49, 57],
[ 45, 57, 55],
[ 46, 55, 48],
[ 47, 48, 61],
[ 47, 61, 65],
[ 47, 65, 68],
[ 47, 68, 52],
[ 48, 55, 67],
[ 48, 67, 61],
[ 49, 50, 56],
[ 49, 56, 57],
[ 50, 53, 60],
[ 50, 60, 56],
[ 51, 52, 66],
[ 51, 66, 98],
[ 52, 68, 66],
[ 53, 54, 63],
[ 53, 63, 60],
[ 55, 57, 59],
[ 55, 59, 74],
[ 55, 74, 67],
[ 56, 60, 58],
[ 56, 58, 57],
[ 57, 58, 62],
[ 57, 62, 59],
[ 58, 60, 64],
[ 58, 64, 62],
[ 59, 62, 75],
[ 59, 75, 74],
[ 60, 63, 69],
[ 60, 69, 73],
[ 60, 73, 64],
[ 61, 67, 82],
[ 61, 82, 72],
[ 61, 72, 65],
[ 62, 64, 75],
[ 64, 73, 77],
[ 64, 77, 75],
[ 65, 72, 70],
[ 65, 70, 68],
[ 66, 68, 71],
[ 66, 71, 78],
[ 66, 78, 98],
[ 67, 74, 80],
[ 67, 80, 82],
[ 68, 70, 71],
[ 69, 96, 91],
[ 69, 91, 76],
[ 69, 76, 73],
[ 70, 72, 79],
[ 70, 79, 78],
[ 70, 78, 71],
[ 72, 82, 85],
[ 72, 85, 81],
[ 72, 81, 79],
[ 73, 76, 77],
[ 74, 75, 80],
[ 75, 77, 90],
[ 75, 90, 80],
[ 76, 91, 77],
[ 77, 91, 90],
[ 78, 79, 81],
[ 78, 81, 88],
[ 78, 88, 98],
[ 80, 90, 92],
[ 80, 92, 83],
[ 80, 83, 82],
[ 81, 85, 86],
[ 81, 86, 87],
[ 81, 87, 88],
[ 82, 83, 84],
[ 82, 84, 85],
[ 83, 92, 84],
[ 84, 92, 93],
[ 84, 93, 95],
[ 84, 95, 85],
[ 85, 95, 89],
[ 85, 89, 86],
[ 86, 89, 87],
[ 87, 89, 94],
[ 87, 94, 88],
[ 88, 94, 98],
[ 89, 95, 94],
[ 90, 91, 97],
[ 90, 97, 92],
[ 91, 96, 97],
[ 92, 97, 99],
[ 92, 99, 93],
[ 93, 99, 95],
[ 94, 95, 98],
[ 95, 99, 98],
]

points.each_with_index do |point, index|
  x = point[0]
  y = point[1]
  if unsafe_sites[index] == 1
    circle x, y, point_size / 2, :fill => :none
  else
    rectangle x - point_size/2, y - point_size/2, point_size, point_size, :fill => :none
  end
  sorted_position = points.index(point)
  text(x, y+10) { raw "#{sorted_position}"}
end

for triangle in triangles do
  corners = triangle.map{|i| points[i]}
  polygon(*(corners.flatten), :fill=>:none)
end
